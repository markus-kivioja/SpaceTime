#define FACE_COUNT 4
#define DUAL_EDGE_LENGTH 1.2250135533055597
#define VALUES_IN_BLOCK 80
#define INDICES_PER_BLOCK 320
const Vector3 BLOCK_WIDTH = Vector3(4.5700000000000003, 7.9154721905897691, 4.5700000000000003); // dimensions of unit block
const ddouble VOLUME = 1.7220192203463363; // volume of body elements
const bool IS_3D = true; // 3-dimensional
void getPositions(Buffer<Vector3> &pos)
{
	pos.resize(VALUES_IN_BLOCK);
	pos[0] = Vector3(0.28562500000000068, 0.39767707147116255, 2.8562500000000011);
	pos[1] = Vector3(0.66645833333333404, 0.89239408338302284, 0.57125000000000092);
	pos[2] = Vector3(2.3326041666666675, 3.7782433195355423, 0.57125000000000092);
	pos[3] = Vector3(0.81607142857142967, 1.6933644836212731, 3.9171428571428581);
	pos[4] = Vector3(1.713750000000001, 7.4886209088744975, 2.0945833333333344);
	pos[5] = Vector3(2.611428571428573, 0.091423683144772616, 3.9171428571428581);
	pos[6] = Vector3(2.5706250000000006, 5.3448471905897685, 2.8562500000000011);
	pos[7] = Vector3(3.9987500000000011, 1.8818281072067442, 2.8562500000000011);
	pos[8] = Vector3(1.713750000000001, 3.2481893782014057, 1.7953571428571442);
	pos[9] = Vector3(0.81607142857142978, 1.6933644836212733, 1.7953571428571438);
	pos[10] = Vector3(0.90447916666666739, 3.4484319782609685, 1.3329166666666676);
	pos[11] = Vector3(1.713750000000001, 3.8606961548541854, 2.8562500000000011);
	pos[12] = Vector3(0.32642857142857207, 4.0491597784396571, 3.9171428571428581);
	pos[13] = Vector3(1.713750000000001, 5.8395642025016281, 2.8562500000000011);
	pos[14] = Vector3(3.1894791666666675, 2.2940922837999613, 1.3329166666666676);
	pos[15] = Vector3(0.85687500000000139, 5.3448471905897685, 2.8562500000000011);
	pos[16] = Vector3(3.9987500000000011, 7.8184322501490717, 2.8562500000000011);
	pos[17] = Vector3(1.713750000000001, 2.2116394484813173, 3.6179166666666678);
	pos[18] = Vector3(1.713750000000001, 2.2116394484813178, 2.0945833333333344);
	pos[19] = Vector3(3.9987500000000011, 3.5308848135796125, 2.0945833333333344);
	pos[20] = Vector3(2.6114285714285721, 1.6933644836212733, 1.7953571428571438);
	pos[21] = Vector3(0.85687500000000061, 4.3554131667660467, 2.8562500000000011);
	pos[22] = Vector3(0.81607142857142922, 0.091423683144772672, 1.7953571428571438);
	pos[23] = Vector3(1.0948958333333345, 3.7782433195355423, 0.57125000000000092);
	pos[24] = Vector3(1.713750000000001, 6.4520709791544073, 1.7953571428571435);
	pos[25] = Vector3(0.32642857142857207, 4.0491597784396571, 1.795357142857144);
	pos[26] = Vector3(3.9987500000000011, 2.4943348838595241, 1.795357142857144);
	pos[27] = Vector3(0.23802083333333468, 2.2940922837999613, 1.3329166666666676);
	pos[28] = Vector3(1.0472916666666676, 0.89239408338302284, 1.3329166666666676);
	pos[29] = Vector3(2.7610416666666682, 0.89239408338302284, 0.57125000000000092);
	pos[30] = Vector3(2.611428571428573, 0.091423683144772672, 1.7953571428571438);
	pos[31] = Vector3(2.5230208333333346, 3.4484319782609685, 1.3329166666666676);
	pos[32] = Vector3(2.5706250000000015, 4.3554131667660467, 2.8562500000000011);
	pos[33] = Vector3(0.28562500000000107, 1.3871110952948833, 2.8562500000000011);
	pos[34] = Vector3(2.3802083333333344, 0.89239408338302284, 1.3329166666666676);
	pos[35] = Vector3(0.32642857142857296, 5.6511005789161581, 1.795357142857144);
	pos[36] = Vector3(0.047604166666668002, 1.9642809425253873, 0.57125000000000092);
	pos[37] = Vector3(0.23802083333333357, 7.4061680735558539, 1.3329166666666672);
	pos[38] = Vector3(0.90447916666666817, 6.251828379094845, 1.3329166666666676);
	pos[39] = Vector3(0.095208333333334283, 4.8501301786779063, 1.3329166666666676);
	pos[40] = Vector3(0.47604166666666781, 4.8501301786779063, 0.57125000000000092);
	pos[41] = Vector3(1.094895833333335, 5.9220170378202717, 0.57125000000000092);
	pos[42] = Vector3(0.047604166666667114, 7.7359794148304273, 0.57125000000000081);
	pos[43] = Vector3(0.81607142857142922, 0.091423683144772616, 3.9171428571428581);
	pos[44] = Vector3(3.1418750000000011, 1.3871110952948833, 2.8562500000000011);
	pos[45] = Vector3(3.1418750000000015, 0.39767707147116255, 2.8562500000000011);
	pos[46] = Vector3(3.10107142857143, 4.0491597784396571, 1.795357142857144);
	pos[47] = Vector3(3.9987500000000011, 6.1693755437762023, 2.0945833333333344);
	pos[48] = Vector3(2.5230208333333337, 6.251828379094845, 1.3329166666666676);
	pos[49] = Vector3(3.3798958333333342, 1.9642809425253873, 0.57125000000000092);
	pos[50] = Vector3(3.3322916666666678, 4.8501301786779063, 1.3329166666666676);
	pos[51] = Vector3(3.9987500000000011, 7.2059254734962916, 1.7953571428571433);
	pos[52] = Vector3(3.1010714285714291, 5.6511005789161581, 1.795357142857144);
	pos[53] = Vector3(3.1894791666666684, 7.4061680735558539, 1.3329166666666672);
	pos[54] = Vector3(2.951458333333334, 4.8501301786779063, 0.57125000000000092);
	pos[55] = Vector3(2.332604166666667, 5.9220170378202717, 0.57125000000000092);
	pos[56] = Vector3(3.3798958333333351, 7.7359794148304273, 0.57125000000000081);
	pos[57] = Vector3(2.5230208333333346, 3.4484319782609685, 4.3795833333333345);
	pos[58] = Vector3(2.6114285714285721, 1.6933644836212731, 3.9171428571428581);
	pos[59] = Vector3(2.3802083333333344, 0.89239408338302284, 4.3795833333333345);
	pos[60] = Vector3(1.0472916666666676, 0.89239408338302284, 4.3795833333333345);
	pos[61] = Vector3(1.713750000000001, 7.4886209088744966, 3.6179166666666678);
	pos[62] = Vector3(1.713750000000001, 3.2481893782014057, 3.9171428571428581);
	pos[63] = Vector3(1.713750000000001, 6.4520709791544073, 3.9171428571428586);
	pos[64] = Vector3(3.1894791666666675, 2.2940922837999613, 4.3795833333333345);
	pos[65] = Vector3(3.9987500000000011, 2.4943348838595241, 3.9171428571428581);
	pos[66] = Vector3(0.23802083333333468, 2.2940922837999613, 4.3795833333333345);
	pos[67] = Vector3(0.90447916666666739, 3.4484319782609685, 4.3795833333333345);
	pos[68] = Vector3(3.9987500000000011, 3.5308848135796125, 3.6179166666666678);
	pos[69] = Vector3(0.23802083333333357, 7.4061680735558539, 4.3795833333333345);
	pos[70] = Vector3(0.90447916666666817, 6.251828379094845, 4.3795833333333345);
	pos[71] = Vector3(0.095208333333334283, 4.8501301786779063, 4.3795833333333345);
	pos[72] = Vector3(0.32642857142857296, 5.6511005789161581, 3.9171428571428581);
	pos[73] = Vector3(3.10107142857143, 4.0491597784396571, 3.9171428571428581);
	pos[74] = Vector3(3.9987500000000011, 6.1693755437762023, 3.6179166666666678);
	pos[75] = Vector3(2.5230208333333337, 6.251828379094845, 4.3795833333333345);
	pos[76] = Vector3(3.3322916666666678, 4.8501301786779063, 4.3795833333333345);
	pos[77] = Vector3(3.1010714285714291, 5.6511005789161581, 3.9171428571428581);
	pos[78] = Vector3(3.1894791666666684, 7.4061680735558539, 4.3795833333333345);
	pos[79] = Vector3(3.9987500000000011, 7.2059254734962916, 3.917142857142859);
}
ddouble getLaplacian(Buffer<int3> &blockDirs, Buffer<int> &valueInds, Buffer<ddouble> &hodges)
{
	blockDirs.resize(INDICES_PER_BLOCK);
	blockDirs[0] = make_int3(0, 0, 0);
	blockDirs[1] = make_int3(0, 0, 0);
	blockDirs[2] = make_int3(0, 0, 0);
	blockDirs[3] = make_int3(-1, -1, 0);
	blockDirs[4] = make_int3(0, 0, -1);
	blockDirs[5] = make_int3(0, 0, 0);
	blockDirs[6] = make_int3(0, 0, 0);
	blockDirs[7] = make_int3(0, -1, 0);
	blockDirs[8] = make_int3(0, 0, -1);
	blockDirs[9] = make_int3(0, 0, 0);
	blockDirs[10] = make_int3(0, 0, 0);
	blockDirs[11] = make_int3(0, 0, 0);
	blockDirs[12] = make_int3(0, 0, 0);
	blockDirs[13] = make_int3(0, 0, 0);
	blockDirs[14] = make_int3(0, 0, 0);
	blockDirs[15] = make_int3(0, 0, 0);
	blockDirs[16] = make_int3(0, 1, 0);
	blockDirs[17] = make_int3(0, 1, 0);
	blockDirs[18] = make_int3(0, 0, 0);
	blockDirs[19] = make_int3(0, 0, 0);
	blockDirs[20] = make_int3(0, 0, 0);
	blockDirs[21] = make_int3(0, -1, 0);
	blockDirs[22] = make_int3(0, -1, 0);
	blockDirs[23] = make_int3(0, 0, 0);
	blockDirs[24] = make_int3(0, 0, 0);
	blockDirs[25] = make_int3(0, 0, 0);
	blockDirs[26] = make_int3(0, 0, 0);
	blockDirs[27] = make_int3(0, 0, 0);
	blockDirs[28] = make_int3(0, 0, 0);
	blockDirs[29] = make_int3(0, 0, 0);
	blockDirs[30] = make_int3(1, 0, 0);
	blockDirs[31] = make_int3(0, 0, 0);
	blockDirs[32] = make_int3(0, 0, 0);
	blockDirs[33] = make_int3(0, 0, 0);
	blockDirs[34] = make_int3(0, 0, 0);
	blockDirs[35] = make_int3(0, 0, 0);
	blockDirs[36] = make_int3(0, 0, 0);
	blockDirs[37] = make_int3(0, 0, 0);
	blockDirs[38] = make_int3(0, 0, 0);
	blockDirs[39] = make_int3(0, 0, 0);
	blockDirs[40] = make_int3(0, 0, 0);
	blockDirs[41] = make_int3(0, 0, 0);
	blockDirs[42] = make_int3(0, 0, 0);
	blockDirs[43] = make_int3(0, 0, 0);
	blockDirs[44] = make_int3(0, 0, 0);
	blockDirs[45] = make_int3(0, 0, 0);
	blockDirs[46] = make_int3(0, 0, 0);
	blockDirs[47] = make_int3(0, 0, 0);
	blockDirs[48] = make_int3(0, 0, 0);
	blockDirs[49] = make_int3(-1, 0, 0);
	blockDirs[50] = make_int3(0, 0, 0);
	blockDirs[51] = make_int3(0, 0, 0);
	blockDirs[52] = make_int3(0, 0, 0);
	blockDirs[53] = make_int3(0, 0, 0);
	blockDirs[54] = make_int3(0, 0, 0);
	blockDirs[55] = make_int3(0, 0, 0);
	blockDirs[56] = make_int3(0, 0, 0);
	blockDirs[57] = make_int3(0, 0, 0);
	blockDirs[58] = make_int3(0, 0, 0);
	blockDirs[59] = make_int3(0, 0, 0);
	blockDirs[60] = make_int3(0, 0, 0);
	blockDirs[61] = make_int3(0, 0, 0);
	blockDirs[62] = make_int3(0, 0, 0);
	blockDirs[63] = make_int3(0, 0, 0);
	blockDirs[64] = make_int3(0, 0, 0);
	blockDirs[65] = make_int3(0, 0, 0);
	blockDirs[66] = make_int3(1, 1, 0);
	blockDirs[67] = make_int3(0, 1, 0);
	blockDirs[68] = make_int3(0, 0, 0);
	blockDirs[69] = make_int3(0, 0, 0);
	blockDirs[70] = make_int3(0, 0, 0);
	blockDirs[71] = make_int3(0, 0, 0);
	blockDirs[72] = make_int3(0, 0, 0);
	blockDirs[73] = make_int3(0, 0, 0);
	blockDirs[74] = make_int3(0, 0, 0);
	blockDirs[75] = make_int3(0, 0, 0);
	blockDirs[76] = make_int3(0, 0, 0);
	blockDirs[77] = make_int3(1, 0, 0);
	blockDirs[78] = make_int3(0, 0, 0);
	blockDirs[79] = make_int3(0, 0, 0);
	blockDirs[80] = make_int3(0, 0, 0);
	blockDirs[81] = make_int3(0, 0, 0);
	blockDirs[82] = make_int3(0, 0, 0);
	blockDirs[83] = make_int3(0, 0, 0);
	blockDirs[84] = make_int3(0, 0, 0);
	blockDirs[85] = make_int3(0, 0, 0);
	blockDirs[86] = make_int3(0, 0, 0);
	blockDirs[87] = make_int3(0, 0, 0);
	blockDirs[88] = make_int3(0, 0, 0);
	blockDirs[89] = make_int3(0, -1, 0);
	blockDirs[90] = make_int3(0, 0, 0);
	blockDirs[91] = make_int3(0, -1, 0);
	blockDirs[92] = make_int3(0, 0, -1);
	blockDirs[93] = make_int3(0, 0, 0);
	blockDirs[94] = make_int3(0, 0, 0);
	blockDirs[95] = make_int3(0, 0, 0);
	blockDirs[96] = make_int3(0, 0, 0);
	blockDirs[97] = make_int3(0, 0, 0);
	blockDirs[98] = make_int3(0, 0, 0);
	blockDirs[99] = make_int3(0, 0, 0);
	blockDirs[100] = make_int3(0, 0, 0);
	blockDirs[101] = make_int3(-1, 0, 0);
	blockDirs[102] = make_int3(0, 0, 0);
	blockDirs[103] = make_int3(0, 0, 0);
	blockDirs[104] = make_int3(1, 0, 0);
	blockDirs[105] = make_int3(0, 0, 0);
	blockDirs[106] = make_int3(0, 0, 0);
	blockDirs[107] = make_int3(0, 0, 0);
	blockDirs[108] = make_int3(0, 0, 0);
	blockDirs[109] = make_int3(0, 0, 0);
	blockDirs[110] = make_int3(-1, 0, 0);
	blockDirs[111] = make_int3(0, 0, 0);
	blockDirs[112] = make_int3(0, 0, 0);
	blockDirs[113] = make_int3(0, 0, 0);
	blockDirs[114] = make_int3(0, 0, 0);
	blockDirs[115] = make_int3(0, 0, 0);
	blockDirs[116] = make_int3(0, 0, -1);
	blockDirs[117] = make_int3(0, 0, 0);
	blockDirs[118] = make_int3(0, 0, 0);
	blockDirs[119] = make_int3(0, -1, 0);
	blockDirs[120] = make_int3(0, 0, 0);
	blockDirs[121] = make_int3(0, -1, 0);
	blockDirs[122] = make_int3(0, 0, 0);
	blockDirs[123] = make_int3(0, -1, 0);
	blockDirs[124] = make_int3(0, 0, 0);
	blockDirs[125] = make_int3(0, 0, 0);
	blockDirs[126] = make_int3(0, 0, 0);
	blockDirs[127] = make_int3(0, 0, 0);
	blockDirs[128] = make_int3(0, 0, 0);
	blockDirs[129] = make_int3(0, 0, 0);
	blockDirs[130] = make_int3(0, 0, 0);
	blockDirs[131] = make_int3(0, 0, 0);
	blockDirs[132] = make_int3(0, 0, 0);
	blockDirs[133] = make_int3(0, 0, 0);
	blockDirs[134] = make_int3(0, 0, 0);
	blockDirs[135] = make_int3(-1, 0, 0);
	blockDirs[136] = make_int3(0, 0, 0);
	blockDirs[137] = make_int3(0, 0, 0);
	blockDirs[138] = make_int3(0, 0, 0);
	blockDirs[139] = make_int3(0, 0, 0);
	blockDirs[140] = make_int3(0, 0, 0);
	blockDirs[141] = make_int3(-1, 0, 0);
	blockDirs[142] = make_int3(0, 0, 0);
	blockDirs[143] = make_int3(0, 0, 0);
	blockDirs[144] = make_int3(0, 0, -1);
	blockDirs[145] = make_int3(0, 0, 0);
	blockDirs[146] = make_int3(-1, 0, 0);
	blockDirs[147] = make_int3(0, 0, 0);
	blockDirs[148] = make_int3(0, 0, 0);
	blockDirs[149] = make_int3(0, 0, 0);
	blockDirs[150] = make_int3(-1, 0, 0);
	blockDirs[151] = make_int3(0, 1, 0);
	blockDirs[152] = make_int3(0, 0, 0);
	blockDirs[153] = make_int3(0, 0, 0);
	blockDirs[154] = make_int3(0, 0, 0);
	blockDirs[155] = make_int3(0, 0, 0);
	blockDirs[156] = make_int3(0, 0, 0);
	blockDirs[157] = make_int3(-1, 0, 0);
	blockDirs[158] = make_int3(0, 0, 0);
	blockDirs[159] = make_int3(0, 0, 0);
	blockDirs[160] = make_int3(0, 0, -1);
	blockDirs[161] = make_int3(0, 0, 0);
	blockDirs[162] = make_int3(0, 0, 0);
	blockDirs[163] = make_int3(0, 0, 0);
	blockDirs[164] = make_int3(0, 0, -1);
	blockDirs[165] = make_int3(0, 0, 0);
	blockDirs[166] = make_int3(0, 0, 0);
	blockDirs[167] = make_int3(0, 0, 0);
	blockDirs[168] = make_int3(0, 0, -1);
	blockDirs[169] = make_int3(0, 0, 0);
	blockDirs[170] = make_int3(-1, 0, 0);
	blockDirs[171] = make_int3(0, 1, 0);
	blockDirs[172] = make_int3(0, 0, 0);
	blockDirs[173] = make_int3(0, -1, 0);
	blockDirs[174] = make_int3(0, -1, 0);
	blockDirs[175] = make_int3(0, 0, 0);
	blockDirs[176] = make_int3(0, 0, 0);
	blockDirs[177] = make_int3(0, 0, 0);
	blockDirs[178] = make_int3(0, 0, 0);
	blockDirs[179] = make_int3(0, 0, 0);
	blockDirs[180] = make_int3(0, 0, 0);
	blockDirs[181] = make_int3(0, 0, 0);
	blockDirs[182] = make_int3(0, 0, 0);
	blockDirs[183] = make_int3(0, -1, 0);
	blockDirs[184] = make_int3(0, 0, 0);
	blockDirs[185] = make_int3(0, 0, 0);
	blockDirs[186] = make_int3(0, 0, 0);
	blockDirs[187] = make_int3(0, 0, 0);
	blockDirs[188] = make_int3(0, 0, 0);
	blockDirs[189] = make_int3(1, 0, 0);
	blockDirs[190] = make_int3(0, 0, 0);
	blockDirs[191] = make_int3(0, 0, 0);
	blockDirs[192] = make_int3(0, 0, 0);
	blockDirs[193] = make_int3(0, 0, 0);
	blockDirs[194] = make_int3(0, 0, 0);
	blockDirs[195] = make_int3(0, 0, 0);
	blockDirs[196] = make_int3(0, 0, -1);
	blockDirs[197] = make_int3(0, 0, 0);
	blockDirs[198] = make_int3(1, 0, 0);
	blockDirs[199] = make_int3(0, 0, 0);
	blockDirs[200] = make_int3(0, 0, 0);
	blockDirs[201] = make_int3(1, 0, 0);
	blockDirs[202] = make_int3(0, 0, 0);
	blockDirs[203] = make_int3(0, 0, 0);
	blockDirs[204] = make_int3(1, 0, 0);
	blockDirs[205] = make_int3(0, 0, 0);
	blockDirs[206] = make_int3(0, 0, 0);
	blockDirs[207] = make_int3(0, 0, 0);
	blockDirs[208] = make_int3(0, 0, 0);
	blockDirs[209] = make_int3(0, 0, 0);
	blockDirs[210] = make_int3(0, 0, 0);
	blockDirs[211] = make_int3(0, 0, 0);
	blockDirs[212] = make_int3(0, 0, 0);
	blockDirs[213] = make_int3(0, 0, 0);
	blockDirs[214] = make_int3(0, 0, 0);
	blockDirs[215] = make_int3(0, 1, 0);
	blockDirs[216] = make_int3(0, 0, -1);
	blockDirs[217] = make_int3(0, 0, 0);
	blockDirs[218] = make_int3(0, 0, 0);
	blockDirs[219] = make_int3(0, 0, 0);
	blockDirs[220] = make_int3(0, 0, -1);
	blockDirs[221] = make_int3(0, 0, 0);
	blockDirs[222] = make_int3(0, 0, 0);
	blockDirs[223] = make_int3(0, 0, 0);
	blockDirs[224] = make_int3(0, 0, -1);
	blockDirs[225] = make_int3(0, 0, 0);
	blockDirs[226] = make_int3(1, 0, 0);
	blockDirs[227] = make_int3(0, 1, 0);
	blockDirs[228] = make_int3(0, 0, 1);
	blockDirs[229] = make_int3(0, 0, 0);
	blockDirs[230] = make_int3(0, 0, 0);
	blockDirs[231] = make_int3(0, 0, 0);
	blockDirs[232] = make_int3(0, 0, 0);
	blockDirs[233] = make_int3(0, 0, 0);
	blockDirs[234] = make_int3(0, 0, 0);
	blockDirs[235] = make_int3(0, 0, 0);
	blockDirs[236] = make_int3(0, 0, 1);
	blockDirs[237] = make_int3(0, 0, 0);
	blockDirs[238] = make_int3(0, 0, 0);
	blockDirs[239] = make_int3(0, 0, 0);
	blockDirs[240] = make_int3(0, 0, 1);
	blockDirs[241] = make_int3(0, 0, 0);
	blockDirs[242] = make_int3(0, 0, 0);
	blockDirs[243] = make_int3(0, 0, 0);
	blockDirs[244] = make_int3(0, 1, 0);
	blockDirs[245] = make_int3(0, 1, 0);
	blockDirs[246] = make_int3(0, 0, 0);
	blockDirs[247] = make_int3(0, 0, 0);
	blockDirs[248] = make_int3(0, 0, 0);
	blockDirs[249] = make_int3(0, 0, 0);
	blockDirs[250] = make_int3(0, 0, 0);
	blockDirs[251] = make_int3(0, 0, 0);
	blockDirs[252] = make_int3(0, 0, 0);
	blockDirs[253] = make_int3(0, 0, 0);
	blockDirs[254] = make_int3(0, 0, 0);
	blockDirs[255] = make_int3(0, 0, 0);
	blockDirs[256] = make_int3(0, 0, 1);
	blockDirs[257] = make_int3(0, 0, 0);
	blockDirs[258] = make_int3(0, 0, 0);
	blockDirs[259] = make_int3(0, 0, 0);
	blockDirs[260] = make_int3(1, 0, 0);
	blockDirs[261] = make_int3(0, 0, 0);
	blockDirs[262] = make_int3(0, 0, 0);
	blockDirs[263] = make_int3(0, 0, 0);
	blockDirs[264] = make_int3(0, 0, 1);
	blockDirs[265] = make_int3(0, 0, 0);
	blockDirs[266] = make_int3(-1, 0, 0);
	blockDirs[267] = make_int3(0, 0, 0);
	blockDirs[268] = make_int3(0, 0, 1);
	blockDirs[269] = make_int3(0, 0, 0);
	blockDirs[270] = make_int3(0, 0, 0);
	blockDirs[271] = make_int3(0, 0, 0);
	blockDirs[272] = make_int3(0, 0, 0);
	blockDirs[273] = make_int3(1, 0, 0);
	blockDirs[274] = make_int3(0, 0, 0);
	blockDirs[275] = make_int3(0, 0, 0);
	blockDirs[276] = make_int3(0, 0, 1);
	blockDirs[277] = make_int3(0, 0, 0);
	blockDirs[278] = make_int3(-1, 0, 0);
	blockDirs[279] = make_int3(0, 1, 0);
	blockDirs[280] = make_int3(0, 0, 1);
	blockDirs[281] = make_int3(0, 0, 0);
	blockDirs[282] = make_int3(0, 0, 0);
	blockDirs[283] = make_int3(0, 0, 0);
	blockDirs[284] = make_int3(0, 0, 1);
	blockDirs[285] = make_int3(-1, 0, 0);
	blockDirs[286] = make_int3(0, 0, 0);
	blockDirs[287] = make_int3(0, 0, 0);
	blockDirs[288] = make_int3(0, 0, 0);
	blockDirs[289] = make_int3(-1, 0, 0);
	blockDirs[290] = make_int3(0, 0, 0);
	blockDirs[291] = make_int3(0, 0, 0);
	blockDirs[292] = make_int3(0, 0, 0);
	blockDirs[293] = make_int3(0, 0, 0);
	blockDirs[294] = make_int3(0, 0, 0);
	blockDirs[295] = make_int3(0, 0, 0);
	blockDirs[296] = make_int3(0, 0, 0);
	blockDirs[297] = make_int3(1, 0, 0);
	blockDirs[298] = make_int3(0, 0, 0);
	blockDirs[299] = make_int3(0, 0, 0);
	blockDirs[300] = make_int3(0, 0, 1);
	blockDirs[301] = make_int3(0, 0, 0);
	blockDirs[302] = make_int3(0, 0, 0);
	blockDirs[303] = make_int3(0, 0, 0);
	blockDirs[304] = make_int3(0, 0, 1);
	blockDirs[305] = make_int3(1, 0, 0);
	blockDirs[306] = make_int3(0, 0, 0);
	blockDirs[307] = make_int3(0, 0, 0);
	blockDirs[308] = make_int3(0, 0, 0);
	blockDirs[309] = make_int3(0, 0, 0);
	blockDirs[310] = make_int3(0, 0, 0);
	blockDirs[311] = make_int3(0, 0, 0);
	blockDirs[312] = make_int3(0, 0, 1);
	blockDirs[313] = make_int3(0, 0, 0);
	blockDirs[314] = make_int3(0, 0, 0);
	blockDirs[315] = make_int3(0, 1, 0);
	blockDirs[316] = make_int3(1, 0, 0);
	blockDirs[317] = make_int3(0, 0, 0);
	blockDirs[318] = make_int3(0, 0, 0);
	blockDirs[319] = make_int3(0, 0, 0);

	valueInds.resize(INDICES_PER_BLOCK);
	valueInds[0] = 22;
	valueInds[1] = 43;
	valueInds[2] = 33;
	valueInds[3] = 16;
	valueInds[4] = 60;
	valueInds[5] = 28;
	valueInds[6] = 36;
	valueInds[7] = 42;
	valueInds[8] = 57;
	valueInds[9] = 31;
	valueInds[10] = 54;
	valueInds[11] = 23;
	valueInds[12] = 60;
	valueInds[13] = 17;
	valueInds[14] = 66;
	valueInds[15] = 33;
	valueInds[16] = 22;
	valueInds[17] = 30;
	valueInds[18] = 61;
	valueInds[19] = 24;
	valueInds[20] = 59;
	valueInds[21] = 61;
	valueInds[22] = 78;
	valueInds[23] = 45;
	valueInds[24] = 52;
	valueInds[25] = 77;
	valueInds[26] = 32;
	valueInds[27] = 13;
	valueInds[28] = 26;
	valueInds[29] = 65;
	valueInds[30] = 33;
	valueInds[31] = 44;
	valueInds[32] = 31;
	valueInds[33] = 18;
	valueInds[34] = 10;
	valueInds[35] = 11;
	valueInds[36] = 28;
	valueInds[37] = 18;
	valueInds[38] = 33;
	valueInds[39] = 27;
	valueInds[40] = 23;
	valueInds[41] = 27;
	valueInds[42] = 25;
	valueInds[43] = 8;
	valueInds[44] = 8;
	valueInds[45] = 62;
	valueInds[46] = 32;
	valueInds[47] = 21;
	valueInds[48] = 71;
	valueInds[49] = 68;
	valueInds[50] = 67;
	valueInds[51] = 21;
	valueInds[52] = 24;
	valueInds[53] = 63;
	valueInds[54] = 6;
	valueInds[55] = 15;
	valueInds[56] = 49;
	valueInds[57] = 31;
	valueInds[58] = 26;
	valueInds[59] = 20;
	valueInds[60] = 35;
	valueInds[61] = 72;
	valueInds[62] = 21;
	valueInds[63] = 13;
	valueInds[64] = 51;
	valueInds[65] = 79;
	valueInds[66] = 0;
	valueInds[67] = 45;
	valueInds[68] = 3;
	valueInds[69] = 58;
	valueInds[70] = 62;
	valueInds[71] = 18;
	valueInds[72] = 9;
	valueInds[73] = 20;
	valueInds[74] = 17;
	valueInds[75] = 8;
	valueInds[76] = 46;
	valueInds[77] = 25;
	valueInds[78] = 26;
	valueInds[79] = 68;
	valueInds[80] = 34;
	valueInds[81] = 18;
	valueInds[82] = 44;
	valueInds[83] = 14;
	valueInds[84] = 25;
	valueInds[85] = 12;
	valueInds[86] = 15;
	valueInds[87] = 11;
	valueInds[88] = 28;
	valueInds[89] = 4;
	valueInds[90] = 0;
	valueInds[91] = 37;
	valueInds[92] = 67;
	valueInds[93] = 10;
	valueInds[94] = 40;
	valueInds[95] = 2;
	valueInds[96] = 48;
	valueInds[97] = 4;
	valueInds[98] = 38;
	valueInds[99] = 13;
	valueInds[100] = 39;
	valueInds[101] = 19;
	valueInds[102] = 10;
	valueInds[103] = 21;
	valueInds[104] = 27;
	valueInds[105] = 19;
	valueInds[106] = 14;
	valueInds[107] = 7;
	valueInds[108] = 36;
	valueInds[109] = 10;
	valueInds[110] = 26;
	valueInds[111] = 9;
	valueInds[112] = 9;
	valueInds[113] = 34;
	valueInds[114] = 22;
	valueInds[115] = 1;
	valueInds[116] = 59;
	valueInds[117] = 34;
	valueInds[118] = 49;
	valueInds[119] = 56;
	valueInds[120] = 34;
	valueInds[121] = 4;
	valueInds[122] = 45;
	valueInds[123] = 53;
	valueInds[124] = 2;
	valueInds[125] = 14;
	valueInds[126] = 46;
	valueInds[127] = 8;
	valueInds[128] = 46;
	valueInds[129] = 73;
	valueInds[130] = 6;
	valueInds[131] = 11;
	valueInds[132] = 9;
	valueInds[133] = 3;
	valueInds[134] = 0;
	valueInds[135] = 7;
	valueInds[136] = 20;
	valueInds[137] = 28;
	valueInds[138] = 30;
	valueInds[139] = 29;
	valueInds[140] = 39;
	valueInds[141] = 47;
	valueInds[142] = 38;
	valueInds[143] = 15;
	valueInds[144] = 66;
	valueInds[145] = 27;
	valueInds[146] = 49;
	valueInds[147] = 1;
	valueInds[148] = 42;
	valueInds[149] = 38;
	valueInds[150] = 51;
	valueInds[151] = 22;
	valueInds[152] = 41;
	valueInds[153] = 37;
	valueInds[154] = 35;
	valueInds[155] = 24;
	valueInds[156] = 40;
	valueInds[157] = 50;
	valueInds[158] = 35;
	valueInds[159] = 25;
	valueInds[160] = 71;
	valueInds[161] = 39;
	valueInds[162] = 41;
	valueInds[163] = 23;
	valueInds[164] = 70;
	valueInds[165] = 38;
	valueInds[166] = 40;
	valueInds[167] = 55;
	valueInds[168] = 69;
	valueInds[169] = 37;
	valueInds[170] = 56;
	valueInds[171] = 1;
	valueInds[172] = 60;
	valueInds[173] = 61;
	valueInds[174] = 69;
	valueInds[175] = 0;
	valueInds[176] = 20;
	valueInds[177] = 58;
	valueInds[178] = 45;
	valueInds[179] = 7;
	valueInds[180] = 30;
	valueInds[181] = 5;
	valueInds[182] = 44;
	valueInds[183] = 16;
	valueInds[184] = 50;
	valueInds[185] = 19;
	valueInds[186] = 31;
	valueInds[187] = 32;
	valueInds[188] = 52;
	valueInds[189] = 35;
	valueInds[190] = 51;
	valueInds[191] = 74;
	valueInds[192] = 55;
	valueInds[193] = 53;
	valueInds[194] = 52;
	valueInds[195] = 24;
	valueInds[196] = 64;
	valueInds[197] = 14;
	valueInds[198] = 36;
	valueInds[199] = 29;
	valueInds[200] = 54;
	valueInds[201] = 39;
	valueInds[202] = 52;
	valueInds[203] = 46;
	valueInds[204] = 37;
	valueInds[205] = 47;
	valueInds[206] = 53;
	valueInds[207] = 16;
	valueInds[208] = 50;
	valueInds[209] = 47;
	valueInds[210] = 48;
	valueInds[211] = 6;
	valueInds[212] = 56;
	valueInds[213] = 48;
	valueInds[214] = 51;
	valueInds[215] = 30;
	valueInds[216] = 76;
	valueInds[217] = 50;
	valueInds[218] = 55;
	valueInds[219] = 2;
	valueInds[220] = 75;
	valueInds[221] = 48;
	valueInds[222] = 54;
	valueInds[223] = 41;
	valueInds[224] = 78;
	valueInds[225] = 53;
	valueInds[226] = 42;
	valueInds[227] = 29;
	valueInds[228] = 2;
	valueInds[229] = 64;
	valueInds[230] = 73;
	valueInds[231] = 62;
	valueInds[232] = 59;
	valueInds[233] = 17;
	valueInds[234] = 64;
	valueInds[235] = 44;
	valueInds[236] = 29;
	valueInds[237] = 60;
	valueInds[238] = 58;
	valueInds[239] = 5;
	valueInds[240] = 1;
	valueInds[241] = 59;
	valueInds[242] = 3;
	valueInds[243] = 43;
	valueInds[244] = 43;
	valueInds[245] = 5;
	valueInds[246] = 63;
	valueInds[247] = 4;
	valueInds[248] = 57;
	valueInds[249] = 17;
	valueInds[250] = 67;
	valueInds[251] = 11;
	valueInds[252] = 75;
	valueInds[253] = 61;
	valueInds[254] = 70;
	valueInds[255] = 13;
	valueInds[256] = 49;
	valueInds[257] = 57;
	valueInds[258] = 65;
	valueInds[259] = 58;
	valueInds[260] = 66;
	valueInds[261] = 68;
	valueInds[262] = 64;
	valueInds[263] = 7;
	valueInds[264] = 36;
	valueInds[265] = 67;
	valueInds[266] = 65;
	valueInds[267] = 3;
	valueInds[268] = 23;
	valueInds[269] = 66;
	valueInds[270] = 12;
	valueInds[271] = 62;
	valueInds[272] = 73;
	valueInds[273] = 12;
	valueInds[274] = 65;
	valueInds[275] = 19;
	valueInds[276] = 42;
	valueInds[277] = 70;
	valueInds[278] = 79;
	valueInds[279] = 43;
	valueInds[280] = 41;
	valueInds[281] = 69;
	valueInds[282] = 72;
	valueInds[283] = 63;
	valueInds[284] = 40;
	valueInds[285] = 76;
	valueInds[286] = 72;
	valueInds[287] = 12;
	valueInds[288] = 71;
	valueInds[289] = 74;
	valueInds[290] = 70;
	valueInds[291] = 15;
	valueInds[292] = 76;
	valueInds[293] = 68;
	valueInds[294] = 57;
	valueInds[295] = 32;
	valueInds[296] = 77;
	valueInds[297] = 72;
	valueInds[298] = 79;
	valueInds[299] = 47;
	valueInds[300] = 55;
	valueInds[301] = 78;
	valueInds[302] = 77;
	valueInds[303] = 63;
	valueInds[304] = 54;
	valueInds[305] = 71;
	valueInds[306] = 77;
	valueInds[307] = 73;
	valueInds[308] = 76;
	valueInds[309] = 74;
	valueInds[310] = 75;
	valueInds[311] = 6;
	valueInds[312] = 56;
	valueInds[313] = 75;
	valueInds[314] = 79;
	valueInds[315] = 5;
	valueInds[316] = 69;
	valueInds[317] = 74;
	valueInds[318] = 78;
	valueInds[319] = 16;

	hodges.resize(INDICES_PER_BLOCK);
	hodges[0] = 1.2375521954212776;
	hodges[1] = 1.2375521954212778;
	hodges[2] = 1.5322074800453922;
	hodges[3] = 1.532207480045392;
	hodges[4] = 1.7237334150510646;
	hodges[5] = 1.723733415051065;
	hodges[6] = 1.0607590246468097;
	hodges[7] = 1.0607590246468095;
	hodges[8] = 1.7237334150510659;
	hodges[9] = 1.7237334150510659;
	hodges[10] = 1.0607590246468102;
	hodges[11] = 1.0607590246468099;
	hodges[12] = 1.6223373318127678;
	hodges[13] = 1.253624301855321;
	hodges[14] = 1.6223373318127674;
	hodges[15] = 1.0607590246468097;
	hodges[16] = 1.4625616854978727;
	hodges[17] = 1.4625616854978727;
	hodges[18] = 0.86186670752553263;
	hodges[19] = 1.4625616854978725;
	hodges[20] = 1.6223373318127678;
	hodges[21] = 1.2536243018553195;
	hodges[22] = 1.6223373318127674;
	hodges[23] = 1.0607590246468097;
	hodges[24] = 1.2375521954212778;
	hodges[25] = 1.2375521954212778;
	hodges[26] = 1.53220748004539;
	hodges[27] = 1.5322074800453929;
	hodges[28] = 1.237552195421278;
	hodges[29] = 1.237552195421278;
	hodges[30] = 1.5322074800453909;
	hodges[31] = 1.5322074800453913;
	hodges[32] = 1.6223373318127672;
	hodges[33] = 1.2536243018553221;
	hodges[34] = 1.6223373318127672;
	hodges[35] = 1.0607590246468099;
	hodges[36] = 1.6223373318127676;
	hodges[37] = 1.253624301855321;
	hodges[38] = 1.0607590246468093;
	hodges[39] = 1.6223373318127676;
	hodges[40] = 1.7237334150510659;
	hodges[41] = 0.98499052288632427;
	hodges[42] = 1.4195451653361708;
	hodges[43] = 1.4195451653361713;
	hodges[44] = 1.2375521954212783;
	hodges[45] = 1.237552195421278;
	hodges[46] = 1.5322074800453906;
	hodges[47] = 1.5322074800453909;
	hodges[48] = 1.6223373318127696;
	hodges[49] = 1.2536243018553206;
	hodges[50] = 1.6223373318127661;
	hodges[51] = 1.0607590246468097;
	hodges[52] = 1.2375521954212776;
	hodges[53] = 1.2375521954212776;
	hodges[54] = 1.5322074800453924;
	hodges[55] = 1.5322074800453924;
	hodges[56] = 1.7237334150510655;
	hodges[57] = 0.98499052288632427;
	hodges[58] = 1.4195451653361713;
	hodges[59] = 1.4195451653361719;
	hodges[60] = 1.237552195421278;
	hodges[61] = 1.237552195421278;
	hodges[62] = 1.53220748004539;
	hodges[63] = 1.5322074800453929;
	hodges[64] = 1.2375521954212769;
	hodges[65] = 1.2375521954212767;
	hodges[66] = 1.532207480045392;
	hodges[67] = 1.532207480045392;
	hodges[68] = 1.4625616854978742;
	hodges[69] = 1.4625616854978745;
	hodges[70] = 1.4625616854978749;
	hodges[71] = 0.86186670752553263;
	hodges[72] = 1.4625616854978742;
	hodges[73] = 1.4625616854978742;
	hodges[74] = 0.86186670752553263;
	hodges[75] = 1.4625616854978751;
	hodges[76] = 1.4625616854978738;
	hodges[77] = 1.4625616854978729;
	hodges[78] = 1.4625616854978747;
	hodges[79] = 0.86186670752553263;
	hodges[80] = 1.6223373318127676;
	hodges[81] = 1.253624301855321;
	hodges[82] = 1.0607590246468093;
	hodges[83] = 1.6223373318127674;
	hodges[84] = 1.237552195421278;
	hodges[85] = 1.237552195421278;
	hodges[86] = 1.5322074800453909;
	hodges[87] = 1.5322074800453904;
	hodges[88] = 1.6223373318127678;
	hodges[89] = 1.2536243018553197;
	hodges[90] = 1.0607590246468095;
	hodges[91] = 1.6223373318127674;
	hodges[92] = 1.7237334150510659;
	hodges[93] = 1.7237334150510659;
	hodges[94] = 1.0607590246468102;
	hodges[95] = 1.0607590246468099;
	hodges[96] = 1.6223373318127692;
	hodges[97] = 1.2536243018553184;
	hodges[98] = 1.6223373318127685;
	hodges[99] = 1.0607590246468095;
	hodges[100] = 1.6223373318127696;
	hodges[101] = 1.2536243018553206;
	hodges[102] = 1.6223373318127661;
	hodges[103] = 1.0607590246468097;
	hodges[104] = 1.6223373318127672;
	hodges[105] = 1.2536243018553215;
	hodges[106] = 1.6223373318127672;
	hodges[107] = 1.0607590246468097;
	hodges[108] = 1.7237334150510655;
	hodges[109] = 0.98499052288632427;
	hodges[110] = 1.419545165336171;
	hodges[111] = 1.4195451653361721;
	hodges[112] = 1.4195451653361721;
	hodges[113] = 0.98499052288632327;
	hodges[114] = 1.4195451653361724;
	hodges[115] = 1.7237334150510655;
	hodges[116] = 1.7237334150510644;
	hodges[117] = 1.723733415051065;
	hodges[118] = 1.0607590246468097;
	hodges[119] = 1.0607590246468097;
	hodges[120] = 1.6223373318127678;
	hodges[121] = 1.2536243018553195;
	hodges[122] = 1.0607590246468095;
	hodges[123] = 1.6223373318127674;
	hodges[124] = 1.7237334150510659;
	hodges[125] = 0.98499052288632427;
	hodges[126] = 1.4195451653361708;
	hodges[127] = 1.4195451653361713;
	hodges[128] = 1.237552195421278;
	hodges[129] = 1.237552195421278;
	hodges[130] = 1.5322074800453909;
	hodges[131] = 1.5322074800453902;
	hodges[132] = 1.2375521954212776;
	hodges[133] = 1.237552195421278;
	hodges[134] = 1.5322074800453924;
	hodges[135] = 1.5322074800453909;
	hodges[136] = 1.4195451653361721;
	hodges[137] = 0.98499052288632327;
	hodges[138] = 1.4195451653361724;
	hodges[139] = 1.7237334150510655;
	hodges[140] = 1.6223373318127647;
	hodges[141] = 1.2536243018553199;
	hodges[142] = 1.6223373318127687;
	hodges[143] = 1.0607590246468099;
	hodges[144] = 1.7237334150510657;
	hodges[145] = 1.7237334150510657;
	hodges[146] = 1.0607590246468086;
	hodges[147] = 1.0607590246468102;
	hodges[148] = 1.7237334150510668;
	hodges[149] = 0.98499052288632161;
	hodges[150] = 1.4195451653361726;
	hodges[151] = 1.4195451653361701;
	hodges[152] = 1.7237334150510657;
	hodges[153] = 0.98499052288632161;
	hodges[154] = 1.4195451653361721;
	hodges[155] = 1.4195451653361724;
	hodges[156] = 1.723733415051065;
	hodges[157] = 0.98499052288632305;
	hodges[158] = 1.4195451653361699;
	hodges[159] = 1.4195451653361735;
	hodges[160] = 1.723733415051065;
	hodges[161] = 1.723733415051065;
	hodges[162] = 1.060759024646809;
	hodges[163] = 1.0607590246468099;
	hodges[164] = 1.7237334150510657;
	hodges[165] = 1.7237334150510657;
	hodges[166] = 1.0607590246468084;
	hodges[167] = 1.0607590246468106;
	hodges[168] = 1.7237334150510668;
	hodges[169] = 1.7237334150510664;
	hodges[170] = 1.0607590246468104;
	hodges[171] = 1.0607590246468088;
	hodges[172] = 1.6223373318127678;
	hodges[173] = 1.2536243018553197;
	hodges[174] = 1.6223373318127674;
	hodges[175] = 1.0607590246468097;
	hodges[176] = 1.2375521954212774;
	hodges[177] = 1.2375521954212776;
	hodges[178] = 1.5322074800453924;
	hodges[179] = 1.5322074800453909;
	hodges[180] = 1.2375521954212776;
	hodges[181] = 1.2375521954212778;
	hodges[182] = 1.5322074800453922;
	hodges[183] = 1.5322074800453926;
	hodges[184] = 1.6223373318127696;
	hodges[185] = 1.2536243018553206;
	hodges[186] = 1.6223373318127661;
	hodges[187] = 1.0607590246468097;
	hodges[188] = 1.4625616854978734;
	hodges[189] = 1.4625616854978714;
	hodges[190] = 1.4625616854978729;
	hodges[191] = 0.86186670752553274;
	hodges[192] = 1.7237334150510657;
	hodges[193] = 0.98499052288632161;
	hodges[194] = 1.4195451653361719;
	hodges[195] = 1.419545165336173;
	hodges[196] = 1.7237334150510657;
	hodges[197] = 1.7237334150510657;
	hodges[198] = 1.060759024646809;
	hodges[199] = 1.0607590246468102;
	hodges[200] = 1.723733415051065;
	hodges[201] = 0.98499052288632216;
	hodges[202] = 1.4195451653361699;
	hodges[203] = 1.4195451653361735;
	hodges[204] = 1.6223373318127685;
	hodges[205] = 1.253624301855319;
	hodges[206] = 1.6223373318127685;
	hodges[207] = 1.0607590246468086;
	hodges[208] = 1.6223373318127647;
	hodges[209] = 1.2536243018553199;
	hodges[210] = 1.6223373318127683;
	hodges[211] = 1.0607590246468097;
	hodges[212] = 1.7237334150510668;
	hodges[213] = 0.98499052288632161;
	hodges[214] = 1.4195451653361726;
	hodges[215] = 1.4195451653361701;
	hodges[216] = 1.7237334150510646;
	hodges[217] = 1.723733415051065;
	hodges[218] = 1.060759024646809;
	hodges[219] = 1.0607590246468099;
	hodges[220] = 1.7237334150510657;
	hodges[221] = 1.7237334150510657;
	hodges[222] = 1.0607590246468084;
	hodges[223] = 1.0607590246468106;
	hodges[224] = 1.7237334150510668;
	hodges[225] = 1.7237334150510664;
	hodges[226] = 1.0607590246468106;
	hodges[227] = 1.0607590246468086;
	hodges[228] = 1.7237334150510659;
	hodges[229] = 0.98499052288632427;
	hodges[230] = 1.4195451653361708;
	hodges[231] = 1.4195451653361713;
	hodges[232] = 1.6223373318127678;
	hodges[233] = 1.253624301855321;
	hodges[234] = 1.6223373318127667;
	hodges[235] = 1.0607590246468095;
	hodges[236] = 1.723733415051065;
	hodges[237] = 0.98499052288632305;
	hodges[238] = 1.4195451653361719;
	hodges[239] = 1.4195451653361719;
	hodges[240] = 1.723733415051065;
	hodges[241] = 0.98499052288632305;
	hodges[242] = 1.4195451653361719;
	hodges[243] = 1.4195451653361719;
	hodges[244] = 1.462561685497872;
	hodges[245] = 1.462561685497872;
	hodges[246] = 1.4625616854978734;
	hodges[247] = 0.86186670752553263;
	hodges[248] = 1.6223373318127672;
	hodges[249] = 1.2536243018553217;
	hodges[250] = 1.6223373318127672;
	hodges[251] = 1.0607590246468097;
	hodges[252] = 1.6223373318127692;
	hodges[253] = 1.2536243018553193;
	hodges[254] = 1.6223373318127685;
	hodges[255] = 1.0607590246468095;
	hodges[256] = 1.7237334150510655;
	hodges[257] = 0.98499052288632427;
	hodges[258] = 1.4195451653361713;
	hodges[259] = 1.4195451653361713;
	hodges[260] = 1.6223373318127672;
	hodges[261] = 1.2536243018553215;
	hodges[262] = 1.6223373318127672;
	hodges[263] = 1.0607590246468097;
	hodges[264] = 1.7237334150510655;
	hodges[265] = 0.98499052288632427;
	hodges[266] = 1.419545165336171;
	hodges[267] = 1.4195451653361719;
	hodges[268] = 1.7237334150510659;
	hodges[269] = 0.98499052288632427;
	hodges[270] = 1.4195451653361708;
	hodges[271] = 1.4195451653361713;
	hodges[272] = 1.4625616854978738;
	hodges[273] = 1.4625616854978729;
	hodges[274] = 1.4625616854978747;
	hodges[275] = 0.86186670752553263;
	hodges[276] = 1.7237334150510664;
	hodges[277] = 0.98499052288632161;
	hodges[278] = 1.4195451653361735;
	hodges[279] = 1.4195451653361701;
	hodges[280] = 1.7237334150510657;
	hodges[281] = 0.98499052288632161;
	hodges[282] = 1.4195451653361721;
	hodges[283] = 1.4195451653361724;
	hodges[284] = 1.723733415051065;
	hodges[285] = 0.98499052288632305;
	hodges[286] = 1.4195451653361699;
	hodges[287] = 1.4195451653361735;
	hodges[288] = 1.6223373318127647;
	hodges[289] = 1.2536243018553199;
	hodges[290] = 1.6223373318127687;
	hodges[291] = 1.0607590246468099;
	hodges[292] = 1.6223373318127696;
	hodges[293] = 1.2536243018553206;
	hodges[294] = 1.6223373318127661;
	hodges[295] = 1.0607590246468097;
	hodges[296] = 1.4625616854978734;
	hodges[297] = 1.4625616854978716;
	hodges[298] = 1.4625616854978727;
	hodges[299] = 0.86186670752553274;
	hodges[300] = 1.7237334150510657;
	hodges[301] = 0.98499052288632161;
	hodges[302] = 1.4195451653361719;
	hodges[303] = 1.419545165336173;
	hodges[304] = 1.723733415051065;
	hodges[305] = 0.98499052288632216;
	hodges[306] = 1.4195451653361699;
	hodges[307] = 1.4195451653361735;
	hodges[308] = 1.6223373318127647;
	hodges[309] = 1.2536243018553199;
	hodges[310] = 1.6223373318127683;
	hodges[311] = 1.0607590246468097;
	hodges[312] = 1.7237334150510664;
	hodges[313] = 0.98499052288632161;
	hodges[314] = 1.4195451653361735;
	hodges[315] = 1.4195451653361701;
	hodges[316] = 1.6223373318127694;
	hodges[317] = 1.2536243018553188;
	hodges[318] = 1.6223373318127694;
	hodges[319] = 1.0607590246468084;

	return 1.7237334150510668;
}
